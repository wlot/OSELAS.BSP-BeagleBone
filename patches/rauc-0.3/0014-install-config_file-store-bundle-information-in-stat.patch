From 3ad6218d8585ec62a63eb2869a35b4e9addc0a47 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ulrich=20=C3=96lmann?= <u.oelmann@pengutronix.de>
Date: Tue, 5 Sep 2017 16:44:24 +0200
Subject: [PATCH 14/44] install/config_file: store bundle information in status
 file
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Ulrich Ã–lmann <u.oelmann@pengutronix.de>
---
 docs/reference.rst    | 11 +++++++++++
 include/config_file.h |  4 ++++
 src/config_file.c     | 28 ++++++++++++++++++++++++----
 src/install.c         |  8 ++++++++
 4 files changed, 47 insertions(+), 4 deletions(-)

diff --git a/docs/reference.rst b/docs/reference.rst
index 6c1200c..01acdcd 100644
--- a/docs/reference.rst
+++ b/docs/reference.rst
@@ -205,6 +205,8 @@ A valid manifest file must have the file extension ``.raucm``.
   sha256=ecf4c031d01cb9bfa9aa5ecfce93efcf9149544bdbf91178d2c2d9d1d24076ca
 
 
+.. _sec-manifest-update:
+
 **[update] section**
 
 ``compatible``
@@ -287,6 +289,10 @@ termed with the slot name (e.g. [slot.rootfs.1]) for the central status file:
 .. code-block:: cfg
 
   [slot]
+  bundle.compatible=FooCorp Super BarBazzer
+  bundle.version=2016.08-1
+  bundle.description=Introduction of Galactic Feature XYZ
+  bundle.build=2016.08.1/imx6/20170324-7
   status=ok
   sha256=b14c1457dc10469418b4154fef29a90e1ffb4dddd308bf0f2456d436963ef5b3
   size=419430400
@@ -298,6 +304,11 @@ Having the slot's content's size allows to re-calculate the hash via `head -c
 <size> <slot-device> | sha256sum` or `dd bs=<size> count=1 if=<slot-device> |
 sha256sum`.
 
+The properties ``bundle.compatible``, ``bundle.version``, ``bundle.description``
+and ``bundle.build`` are copies of the respective manifest properties.
+More information can be found in this :ref:`subsection <sec-manifest-update>` of
+section :ref:`Manifest <sec_ref_manifest>`.
+
 
 Command Line Tool
 -----------------
diff --git a/include/config_file.h b/include/config_file.h
index 1e30b08..821c08f 100644
--- a/include/config_file.h
+++ b/include/config_file.h
@@ -61,6 +61,10 @@ typedef enum {
 GQuark r_slot_error_quark(void);
 
 typedef struct {
+	gchar *bundle_compatible;
+	gchar *bundle_version;
+	gchar *bundle_description;
+	gchar *bundle_build;
 	gchar *status;
 	RaucChecksum checksum;
 } RaucSlotStatus;
diff --git a/src/config_file.c b/src/config_file.c
index f9e712f..10cf981 100644
--- a/src/config_file.c
+++ b/src/config_file.c
@@ -407,9 +407,17 @@ static void status_file_get_slot_status(GKeyFile *key_file, const gchar *group,
 	if (!g_key_file_has_group(key_file, group))
 		g_debug("Group %s not found in key file.", group);
 
+	g_free(slotstatus->bundle_compatible);
+	g_free(slotstatus->bundle_version);
+	g_free(slotstatus->bundle_description);
+	g_free(slotstatus->bundle_build);
 	g_free(slotstatus->status);
 	g_clear_pointer(&slotstatus->checksum.digest, g_free);
 
+	slotstatus->bundle_compatible = g_key_file_get_string(key_file, group, "bundle.compatible", NULL);
+	slotstatus->bundle_version = g_key_file_get_string(key_file, group, "bundle.version", NULL);
+	slotstatus->bundle_description = g_key_file_get_string(key_file, group, "bundle.description", NULL);
+	slotstatus->bundle_build = g_key_file_get_string(key_file, group, "bundle.build", NULL);
 	slotstatus->status = g_key_file_get_string(key_file, group, "status", NULL);
 
 	digest = g_key_file_get_string(key_file, group, "sha256", NULL);
@@ -420,11 +428,19 @@ static void status_file_get_slot_status(GKeyFile *key_file, const gchar *group,
 	}
 }
 
-static void status_file_set_slot_status(GKeyFile *key_file, const gchar *group, RaucSlotStatus *slotstatus) {
-	if (slotstatus->status)
-		g_key_file_set_string(key_file, group, "status", slotstatus->status);
+static void status_file_set_string_or_remove_key(GKeyFile *key_file, const gchar *group, const gchar *key, gchar *string) {
+	if (string)
+		g_key_file_set_string(key_file, group, key, string);
 	else
-		g_key_file_remove_key(key_file, group, "status", NULL);
+		g_key_file_remove_key(key_file, group, key, NULL);
+}
+
+static void status_file_set_slot_status(GKeyFile *key_file, const gchar *group, RaucSlotStatus *slotstatus) {
+	status_file_set_string_or_remove_key(key_file, group, "bundle.compatible", slotstatus->bundle_compatible);
+	status_file_set_string_or_remove_key(key_file, group, "bundle.version", slotstatus->bundle_version);
+	status_file_set_string_or_remove_key(key_file, group, "bundle.description", slotstatus->bundle_description);
+	status_file_set_string_or_remove_key(key_file, group, "bundle.build", slotstatus->bundle_build);
+	status_file_set_string_or_remove_key(key_file, group, "status", slotstatus->status);
 
 	if (slotstatus->checksum.digest && slotstatus->checksum.type == G_CHECKSUM_SHA256) {
 		g_key_file_set_string(key_file, group, "sha256", slotstatus->checksum.digest);
@@ -669,6 +685,10 @@ gboolean save_slot_status(RaucSlot *dest_slot, GError **error) {
 void free_slot_status(RaucSlotStatus *slotstatus) {
 	g_return_if_fail(slotstatus);
 
+	g_free(slotstatus->bundle_compatible);
+	g_free(slotstatus->bundle_version);
+	g_free(slotstatus->bundle_description);
+	g_free(slotstatus->bundle_build);
 	g_free(slotstatus->status);
 	g_free(slotstatus->checksum.digest);
 	g_free(slotstatus);
diff --git a/src/install.c b/src/install.c
index 0fa80d5..8d9815c 100644
--- a/src/install.c
+++ b/src/install.c
@@ -924,9 +924,17 @@ static gboolean launch_and_wait_default_handler(RaucInstallArgs *args, gchar* bu
 			goto out;
 		}
 
+		g_free(slot_state->bundle_compatible);
+		g_free(slot_state->bundle_version);
+		g_free(slot_state->bundle_description);
+		g_free(slot_state->bundle_build);
 		g_free(slot_state->status);
 		g_free(slot_state->checksum.digest);
 
+		slot_state->bundle_compatible = g_strdup(manifest->update_compatible);
+		slot_state->bundle_version = g_strdup(manifest->update_version);
+		slot_state->bundle_description = g_strdup(manifest->update_description);
+		slot_state->bundle_build = g_strdup(manifest->update_build);
 		slot_state->status = g_strdup("ok");
 		slot_state->checksum.type = mfimage->checksum.type;
 		slot_state->checksum.digest = g_strdup(mfimage->checksum.digest);
-- 
2.14.1

