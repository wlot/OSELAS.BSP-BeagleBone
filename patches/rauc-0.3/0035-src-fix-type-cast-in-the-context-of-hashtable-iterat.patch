From e980bffa4cda65a2b82ba68ebd295734660d4075 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ulrich=20=C3=96lmann?= <u.oelmann@pengutronix.de>
Date: Thu, 22 Feb 2018 21:19:45 +0100
Subject: [PATCH 35/44] src: fix type cast in the context of hashtable
 iteration
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

g_hash_table_iter_next() requires gpointer* and not gpointer as type for 'key'
and 'value'.

Signed-off-by: Ulrich Ã–lmann <u.oelmann@pengutronix.de>
---
 src/config_file.c  | 6 +++---
 src/context.c      | 4 ++--
 src/main.c         | 2 +-
 src/service.c      | 2 +-
 test/config_file.c | 8 ++++----
 5 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/src/config_file.c b/src/config_file.c
index 9ba6c86..34d9dcf 100644
--- a/src/config_file.c
+++ b/src/config_file.c
@@ -375,7 +375,7 @@ RaucSlot *find_config_slot_by_device(RaucConfig *config, const gchar *device) {
 	RaucSlot *slot;
 
 	g_hash_table_iter_init(&iter, config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		if (g_strcmp0(slot->device, device) == 0) {
 			goto out;
 		}
@@ -632,7 +632,7 @@ static void load_slot_status_globally(void) {
 
 	/* Set all other slots to the default status */
 	g_hash_table_iter_init(&iter, slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		if (slot->status)
 			continue;
 
@@ -712,7 +712,7 @@ static gboolean save_slot_status_globally(GError **error) {
 
 	/* Save all slot status information */
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		if (!slot->status) {
 			continue;
 		}
diff --git a/src/context.c b/src/context.c
index c2b96bd..6b9ab44 100644
--- a/src/context.c
+++ b/src/context.c
@@ -110,7 +110,7 @@ static gboolean launch_and_wait_variables_handler(gchar *handler_name, GHashTabl
 	/* we copy the variables from the hashtable and add them to the
 	   subprocess environment */
 	g_hash_table_iter_init(&iter, variables);
-	while (g_hash_table_iter_next(&iter, (gpointer)&key, (gpointer)&value)) {
+	while (g_hash_table_iter_next(&iter, (gpointer*)&key, (gpointer*)&value)) {
                 g_subprocess_launcher_setenv(handlelaunch, g_strdup(key), g_strdup(value), 1);
 	}
 
@@ -241,7 +241,7 @@ static void r_context_configure(void) {
 		}
 
 		g_hash_table_iter_init(&iter, vars);
-		while (g_hash_table_iter_next(&iter, (gpointer)&key, (gpointer)&value)) {
+		while (g_hash_table_iter_next(&iter, (gpointer*)&key, (gpointer*)&value)) {
 			if (g_strcmp0(key, "RAUC_SYSTEM_SERIAL") == 0)
 				r_context_conf()->system_serial = g_strdup(value);
 		}
diff --git a/src/main.c b/src/main.c
index 29430cb..ded396f 100644
--- a/src/main.c
+++ b/src/main.c
@@ -1336,7 +1336,7 @@ static gboolean status_start(int argc, char **argv)
 			RaucSlot *slot;
 
 			g_hash_table_iter_init(&iter, r_context()->config->slots);
-			while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot))
+			while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot))
 				load_slot_status(slot);
 		} else if (!retrieve_slot_states_via_dbus(&ierror)) {
 			message = g_strdup_printf("rauc status: error retrieving slot status via D-Bus: %s",
diff --git a/src/service.c b/src/service.c
index 33f8c7f..9d83981 100644
--- a/src/service.c
+++ b/src/service.c
@@ -270,7 +270,7 @@ static GVariant* create_slotstatus_array(void) {
 	slot_status_tuples = g_new(GVariant*, slot_number);
 
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		GVariant* slot_status[2];
 
 		g_debug("Adding slot: %s", slot->name);
diff --git a/test/config_file.c b/test/config_file.c
index 1ab8f54..1d2296f 100644
--- a/test/config_file.c
+++ b/test/config_file.c
@@ -550,7 +550,7 @@ static void config_file_test_global_slot_status(ConfigFileFixture *fixture,
 
 	/* Set status for all slots */
 	g_hash_table_iter_init(&iter, slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		if (slot->status)
 			free_slot_status(slot->status);
 
@@ -563,14 +563,14 @@ static void config_file_test_global_slot_status(ConfigFileFixture *fixture,
 
 	/* Save status for all slots */
 	g_hash_table_iter_init(&iter, slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		save_slot_status(slot, &ierror);
 		g_assert_no_error(ierror);
 	}
 
 	/* Clear status for all slots */
 	g_hash_table_iter_init(&iter, slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		if (slot->status)
 			free_slot_status(slot->status);
 
@@ -579,7 +579,7 @@ static void config_file_test_global_slot_status(ConfigFileFixture *fixture,
 
 	/* Check status for all slots */
 	g_hash_table_iter_init(&iter, slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer) &slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		load_slot_status(slot);
 		g_assert_nonnull(slot->status);
 		g_assert_cmpstr(slot->status->status, ==, "ok");
-- 
2.14.1

