From e40719c6974ec538df2115d84de16c0687246c8b Mon Sep 17 00:00:00 2001
From: Bastian Stender <bst@pengutronix.de>
Date: Thu, 15 Feb 2018 11:17:34 +0100
Subject: [PATCH 06/44] docs: add documentation for new sub command
 'write-slot'

Signed-off-by: Bastian Stender <bst@pengutronix.de>
---
 docs/advanced.rst | 13 +++++++++++++
 docs/examples.rst | 11 +++++++++++
 2 files changed, 24 insertions(+)

diff --git a/docs/advanced.rst b/docs/advanced.rst
index 7e0151f..aabac0d 100644
--- a/docs/advanced.rst
+++ b/docs/advanced.rst
@@ -368,6 +368,19 @@ RAUC will report an error if for example a booloader image is only present for
 variant A when you try to install on variant B.
 This should prevent from bricking your device by unintentional partial updates.
 
+Manually Writing Images to Slots
+--------------------------------
+
+In order to write an image to a slot without using update mechanics like hooks,
+slot status etc. use:
+
+.. code-block:: sh
+
+  rauc write-slot <slotname> <image>
+
+This uses the correct handler to write the image to the slot. It is useful for
+development scenarios as well as initial provisioning of embedded boards.
+
 Updating the Bootloader
 -----------------------
 
diff --git a/docs/examples.rst b/docs/examples.rst
index c7efa21..f7cf64f 100644
--- a/docs/examples.rst
+++ b/docs/examples.rst
@@ -202,6 +202,17 @@ on the next boot. By configuring the kernel and systemd to reboot on
 critical errors and by using a (software) watchdog, hangs in a non-working
 installation can be avoided.
 
+Write Slots Without Update Mechanics
+------------------------------------
+
+Assuming an image has been copied to or exists on the target, a manual slot
+write can be performed by::
+
+  > rauc write-slot rootfs.0 rootfs.ext4
+
+This will write the rootfs image ``rootfs.ext4`` to the slot ``rootfs.0``. Note
+that this bypasses all update mechanics like hooks, slot status etc.
+
 Example BSPs
 ------------
 * Yocto
-- 
2.14.1

