From 5d6e571b21a90e7394c315dea8e4536002d090e5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ulrich=20=C3=96lmann?= <u.oelmann@pengutronix.de>
Date: Thu, 22 Feb 2018 21:26:01 +0100
Subject: [PATCH 36/44] src: harmonize whitespace usage in the context of
 hashtable iteration
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Ulrich Ã–lmann <u.oelmann@pengutronix.de>
---
 src/bootchooser.c |  5 ++---
 src/context.c     |  4 ++--
 src/install.c     | 13 ++++++-------
 src/mark.c        |  6 +++---
 4 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/src/bootchooser.c b/src/bootchooser.c
index 418a923..d9b2830 100644
--- a/src/bootchooser.c
+++ b/src/bootchooser.c
@@ -231,8 +231,7 @@ static RaucSlot* barebox_get_primary(GError **error) {
 	gboolean res;
 
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		BareboxSlotState state;
 
 		if (!slot->bootname)
@@ -1015,7 +1014,7 @@ static RaucSlot *efi_get_primary(GError **error) {
 
 		/* find matching slot entry */
 		g_hash_table_iter_init(&iter, r_context()->config->slots);
-		while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&slot)) {
+		while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 			if (g_strcmp0(bootentry->name, slot->bootname) == 0) {
 				primary = slot;
 				break;
diff --git a/src/context.c b/src/context.c
index 6b9ab44..bee711b 100644
--- a/src/context.c
+++ b/src/context.c
@@ -110,7 +110,7 @@ static gboolean launch_and_wait_variables_handler(gchar *handler_name, GHashTabl
 	/* we copy the variables from the hashtable and add them to the
 	   subprocess environment */
 	g_hash_table_iter_init(&iter, variables);
-	while (g_hash_table_iter_next(&iter, (gpointer*)&key, (gpointer*)&value)) {
+	while (g_hash_table_iter_next(&iter, (gpointer*) &key, (gpointer*) &value)) {
                 g_subprocess_launcher_setenv(handlelaunch, g_strdup(key), g_strdup(value), 1);
 	}
 
@@ -241,7 +241,7 @@ static void r_context_configure(void) {
 		}
 
 		g_hash_table_iter_init(&iter, vars);
-		while (g_hash_table_iter_next(&iter, (gpointer*)&key, (gpointer*)&value)) {
+		while (g_hash_table_iter_next(&iter, (gpointer*) &key, (gpointer*) &value)) {
 			if (g_strcmp0(key, "RAUC_SYSTEM_SERIAL") == 0)
 				r_context_conf()->system_serial = g_strdup(value);
 		}
diff --git a/src/install.c b/src/install.c
index 064cb91..11123ec 100644
--- a/src/install.c
+++ b/src/install.c
@@ -264,7 +264,7 @@ static gchar** get_root_system_slot_classes(void) {
 	slotclasses = g_ptr_array_new();
 
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&iterslot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &iterslot)) {
 		const gchar *key = NULL;
 
 		if (iterslot->parent)
@@ -295,8 +295,7 @@ static RaucSlot *select_inactive_slot_class_member(gchar *rootclass) {
 	g_return_val_if_fail(rootclass, NULL);
 
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&iterslot)) {
-
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &iterslot)) {
 		if (iterslot->state != ST_INACTIVE)
 			continue;
 
@@ -371,7 +370,7 @@ GHashTable* determine_target_install_group(void) {
 	/* Now, iterate over all slots available and add those who's parent are
 	 * in the selected root slots */
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&iterslot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &iterslot)) {
 		RaucSlot *parent = get_parent_root_slot(iterslot);
 		g_debug("Checking slot: %s", iterslot->name);
 
@@ -522,7 +521,7 @@ static void prepare_environment(GSubprocessLauncher *launcher, gchar *update_sou
 	g_subprocess_launcher_setenv(launcher, "RAUC_MOUNT_PREFIX", r_context()->config->mount_prefix, TRUE);
 
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		gchar *varname;
 		gchar *tmp;
 		GHashTableIter iiter;
@@ -1013,7 +1012,7 @@ static gboolean reuse_existing_file_checksum(const RaucChecksum *checksum, const
 	RaucSlot *slot;
 
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&slot)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 		gchar *srcname = NULL;
 		if (!slot->mount_point)
 			goto next;
@@ -1211,7 +1210,7 @@ static void print_slot_hash_table(GHashTable *hash_table) {
 	RaucSlot *slot;
 
 	g_hash_table_iter_init(&iter, hash_table);
-	while (g_hash_table_iter_next(&iter, (gpointer *)&key, (gpointer *)&slot)) {
+	while (g_hash_table_iter_next(&iter, (gpointer*) &key, (gpointer*) &slot)) {
 		g_print("  %s -> %s\n", key, slot->name);
 	}
 }
diff --git a/src/mark.c b/src/mark.c
index 42e3dfa..5418cfe 100644
--- a/src/mark.c
+++ b/src/mark.c
@@ -11,7 +11,7 @@ static RaucSlot* get_slot_by_identifier(const gchar *identifier, GError **error)
 	g_return_val_if_fail(error == NULL || *error == NULL, NULL);
 
 	g_hash_table_iter_init(&iter, r_context()->config->slots);
-	while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&booted)) {
+	while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &booted)) {
 		if (booted->state == ST_BOOTED)
 			break;
 		booted = NULL;
@@ -29,7 +29,7 @@ static RaucSlot* get_slot_by_identifier(const gchar *identifier, GError **error)
 	} else if (!g_strcmp0(identifier, "other")) {
 		if (booted) {
 			g_hash_table_iter_init(&iter, r_context()->config->slots);
-			while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&slot)) {
+			while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 				if (slot->sclass == booted->sclass && !slot->parent && slot->bootname && slot != booted)
 					break;
 				slot = NULL;
@@ -51,7 +51,7 @@ static RaucSlot* get_slot_by_identifier(const gchar *identifier, GError **error)
 
 		if (g_strv_length(groupsplit) == 2) {
 			g_hash_table_iter_init(&iter, r_context()->config->slots);
-			while (g_hash_table_iter_next(&iter, NULL, (gpointer *)&slot)) {
+			while (g_hash_table_iter_next(&iter, NULL, (gpointer*) &slot)) {
 				if (!g_strcmp0(slot->sclass, groupsplit[0]) && !slot->parent && !g_strcmp0(slot->name, identifier))
 					break;
 				slot = NULL;
-- 
2.14.1

